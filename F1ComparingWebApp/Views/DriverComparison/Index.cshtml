@model DriverComparisonModel

<div class="row">
    <div class="col-12">
        <form class="form-inline" method="post">
            <label class="my-1 mr-2" for="dropdownFirstDriver">First Driver</label>
            <select class="custom-select my-1 mr-sm-2" id="dropdownFirstDriver">
                @foreach (var driver in Model.DriverList)
                {
                    var selected = driver.Item2 == Model.Driver2Name;
                    if (driver.Item2 == Model.Driver1Name)
                    {
                        <option selected value="@driver.Item1">@driver.Item2</option>
                    }
                    else
                    {

                        <option value="@driver.Item1">@driver.Item2</option>
                    }
                }
            </select>
            <label class="my-1 mr-2" for="dropdownSecondDriver">Second Driver</label>
            <select class="custom-select my-1 mr-sm-2" id="dropdownSecondDriver">
                @foreach (var driver in Model.DriverList)
                {
                    var selected = driver.Item2 == Model.Driver2Name;
                    if (driver.Item2 == Model.Driver2Name)
                    {
                        <option selected value="@driver.Item1">@driver.Item2</option>
                    }
                    else
                    {

                        <option value="@driver.Item1">@driver.Item2</option>
                    }
                }
            </select>

            <button type="submit" class="btn btn-primary">Compare!</button>
        </form>
    </div>
</div>

<div class="row">

    <div class="col-6">
        <h3>@Model.Driver1Name</h3>

        @foreach (var item in Model.Driver1GPdata)
        {
            RenderDriversGpData(item);
        }
    </div>

    <div class="col-6">
        <h3>@Model.Driver2Name</h3>

        @foreach (var item in Model.Driver2GPdata)
        {
            RenderDriversGpData(item);
        }
    </div>
</div>

@{
    void RenderDriversGpData(DriverCompareGPData item)
    {
        var collaspeTarget = item.GPName.Replace(" ", "-");
        <h4>@item.GPName</h4>

        RenderDriversGPRaceResults(item.GPDriverResults);

        <button class="btn btn-secondary" type="button" data-toggle="collapse" data-target="#@collaspeTarget" aria-expanded="false" aria-controls="collapseExample">
            Qualifying times
        </button>
        <div class="collapse" id="@collaspeTarget">
            <div class="card card-body">
                <p>Q1: @item.Q1Time</p>
                <p>Q2: @item.Q2Time</p>
                <p>Q3: @item.Q3Time</p>
                <br />
                <p>Fastest Time: @item.FastestTime.ToString("m:ss.fff")</p>
                <hr />
                <p>Time Deficit: @item.FastestTimeDeficit</p>
            </div>
        </div>
    }

    void RenderDriversGPRaceResults(GPDriverResults driverResults)
    {
        <h4>@driverResults.GPFinishedPos place</h4>
        <h6>@driverResults.GPPoints points</h6>
        <br />
        <p>Starting on the grid: @driverResults.GPStartingPos</p>

        @if (driverResults.GPFinishedPos != 1)
        {
            <p>Gap to leader: @driverResults.GPTimeToLeader</p>
        }

        @if (driverResults.GPFastestRaceLap)
        {
            <button type="button" class="btn fastest-lap text-white">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-clock" viewBox="0 0 16 16">
                    <path d="M8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71V3.5z"></path>
                    <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm7-8A7 7 0 1 1 1 8a7 7 0 0 1 14 0z"></path>
                </svg>
            </button>
            <p>@driverResults.GPFastestRaceLapTime</p>
            <br />
        }
    }

}